// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactMemo changes state after increments 1`] = `
.c1 {
  border-radius: 6px;
  border: none;
  color: white;
  font-size: 14px;
  font-weight: bold;
  background-color: rgb(0,127,224);
  padding: 10px 14px;
  -webkit-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
  outline: none;
  cursor: pointer;
}

.c1:hover {
  background-color: rgb(13,150,255);
}

.c1:active,
.c1:hover:active {
  background-color: rgb(0,98,173);
}

.c0 button + button {
  margin-left: 10px;
}

<div>
  <div
    role="main"
  >
    <div>
      <p>
        CounterAMemo a=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABMemo a=
        0
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABUseMemo a=
        0
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABShallowMemo a=
        0
         b=
        0
      </p>
      children!
    </div>
    <p>
      Container state: 
      0
    </p>
    <div
      class="c0"
    >
      <button
        class="c1 bg-gray"
      >
        Inc A
      </button>
      <button
        class="c1 bg-gray"
      >
        Inc B
      </button>
      <button
        class="c1 bg-gray"
      >
        Null state change
      </button>
    </div>
  </div>
</div>
`;

exports[`ReactMemo changes state after increments 2`] = `
.c1 {
  border-radius: 6px;
  border: none;
  color: white;
  font-size: 14px;
  font-weight: bold;
  background-color: rgb(0,127,224);
  padding: 10px 14px;
  -webkit-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
  outline: none;
  cursor: pointer;
}

.c1:hover {
  background-color: rgb(13,150,255);
}

.c1:active,
.c1:hover:active {
  background-color: rgb(0,98,173);
}

.c0 button + button {
  margin-left: 10px;
}

<div>
  <div
    role="main"
  >
    <div>
      <p>
        CounterAMemo a=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABMemo a=
        1
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABUseMemo a=
        1
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABShallowMemo a=
        1
         b=
        0
      </p>
      children!
    </div>
    <p>
      Container state: 
      1
    </p>
    <div
      class="c0"
    >
      <button
        class="c1 bg-gray"
      >
        Inc A
      </button>
      <button
        class="c1 bg-gray"
      >
        Inc B
      </button>
      <button
        class="c1 bg-gray"
      >
        Null state change
      </button>
    </div>
  </div>
</div>
`;

exports[`ReactMemo changes state after increments 3`] = `
.c1 {
  border-radius: 6px;
  border: none;
  color: white;
  font-size: 14px;
  font-weight: bold;
  background-color: rgb(0,127,224);
  padding: 10px 14px;
  -webkit-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
  outline: none;
  cursor: pointer;
}

.c1:hover {
  background-color: rgb(13,150,255);
}

.c1:active,
.c1:hover:active {
  background-color: rgb(0,98,173);
}

.c0 button + button {
  margin-left: 10px;
}

<div>
  <div
    role="main"
  >
    <div>
      <p>
        CounterAMemo a=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABMemo a=
        1
         b=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABUseMemo a=
        1
         b=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABShallowMemo a=
        1
         b=
        1
      </p>
      children!
    </div>
    <p>
      Container state: 
      1
    </p>
    <div
      class="c0"
    >
      <button
        class="c1 bg-gray"
      >
        Inc A
      </button>
      <button
        class="c1 bg-gray"
      >
        Inc B
      </button>
      <button
        class="c1 bg-gray"
      >
        Null state change
      </button>
    </div>
  </div>
</div>
`;

exports[`ReactMemo changes state after increments 4`] = `
.c1 {
  border-radius: 6px;
  border: none;
  color: white;
  font-size: 14px;
  font-weight: bold;
  background-color: rgb(0,127,224);
  padding: 10px 14px;
  -webkit-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
  outline: none;
  cursor: pointer;
}

.c1:hover {
  background-color: rgb(13,150,255);
}

.c1:active,
.c1:hover:active {
  background-color: rgb(0,98,173);
}

.c0 button + button {
  margin-left: 10px;
}

<div>
  <div
    role="main"
  >
    <div>
      <p>
        CounterAMemo a=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABMemo a=
        1
         b=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABUseMemo a=
        1
         b=
        1
      </p>
    </div>
    <div>
      <p>
        CounterABShallowMemo a=
        1
         b=
        1
      </p>
      children!
    </div>
    <p>
      Container state: 
      1
    </p>
    <div
      class="c0"
    >
      <button
        class="c1 bg-gray"
      >
        Inc A
      </button>
      <button
        class="c1 bg-gray"
      >
        Inc B
      </button>
      <button
        class="c1 bg-gray"
      >
        Null state change
      </button>
    </div>
  </div>
</div>
`;

exports[`ReactMemo renders and matches snapshot 1`] = `
.c1 {
  border-radius: 6px;
  border: none;
  color: white;
  font-size: 14px;
  font-weight: bold;
  background-color: rgb(0,127,224);
  padding: 10px 14px;
  -webkit-transition: background-color 0.3s ease;
  transition: background-color 0.3s ease;
  outline: none;
  cursor: pointer;
}

.c1:hover {
  background-color: rgb(13,150,255);
}

.c1:active,
.c1:hover:active {
  background-color: rgb(0,98,173);
}

.c0 button + button {
  margin-left: 10px;
}

<div>
  <div
    role="main"
  >
    <div>
      <p>
        CounterAMemo a=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABMemo a=
        0
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABUseMemo a=
        0
         b=
        0
      </p>
    </div>
    <div>
      <p>
        CounterABShallowMemo a=
        0
         b=
        0
      </p>
      children!
    </div>
    <p>
      Container state: 
      0
    </p>
    <div
      class="c0"
    >
      <button
        class="c1 bg-gray"
      >
        Inc A
      </button>
      <button
        class="c1 bg-gray"
      >
        Inc B
      </button>
      <button
        class="c1 bg-gray"
      >
        Null state change
      </button>
    </div>
  </div>
</div>
`;
