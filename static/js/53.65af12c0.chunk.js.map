{"version":3,"file":"static/js/53.65af12c0.chunk.js","mappings":"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","sources":["utils/color.ts","utils/canvas.ts","utils/imagePromise.ts","features/photoeditor/PhotoEditorStyles.tsx","features/photoeditor/PhotoEditor.tsx"],"sourcesContent":["\nexport type HSLColor = {\n  h: number;\n  s: number;\n  l: number;\n}\n\nexport type RGBColor = {\n  r: number;\n  g: number;\n  b: number;\n}\n/**\n * HSL to RGB conversion\n * @param h hue as an angle in [0,360]\n * @param s saturation in [0,1]\n * @param l lightness in [0,1]\n * @returns \n */\nexport const HSLtoRGB = ({ h, s, l }: HSLColor) => {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return { \n    r: f(0), \n    g: f(8), \n    b: f(4)\n  };\n}\n\n/**\n * RGB to HSL conversion\n * @param r red value in [0,1]\n * @param g red value in [0,1]\n * @param b red value in [0,1]\n * @returns h in [0,360) and s,l in [0,1]\n */\nexport const RGBtoHSL = ({ r, g, b }: RGBColor) =>{\n  const v = Math.max(r, g, b), c = v - Math.min(r, g, b), f = (1 - Math.abs(v + v - c - 1));\n  const h = c && ((v == r) ? (g - b) / c : ((v == g) ? 2 + (b - r) / c : 4 + (r - g) / c));\n  return {\n    h: 60 * (h < 0 ? h + 6 : h), \n    s: f ? c / f : 0, \n    l: (v + v - c) / 2\n  };\n}","// Utils for working with canvas HTML elements\n\nimport { HSLColor, HSLtoRGB, RGBtoHSL } from \"./color\";\n\n/**\n * Higher order function to retrieve pixel data from canvas element, passing\n * that to given callback function fn and then setting result back to canvas\n * @param fn function to callback with image data\n * @returns \n */\nexport const applyImageDataTransform = (fn) => \n  (canvas: HTMLCanvasElement, width: number, height: number) => {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    const imageData = ctx.getImageData(0, 0, width, height);\n    fn(imageData.data);\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n/**\n * Higher order function to apply canvas pixel data transformation, converting each\n * pixel to HSL values first before calling fn()\n * @param fn \n * @returns \n */\nexport const applyHslDataTransform = (fn: (hsl: HSLColor) => HSLColor) => {\n    return applyImageDataTransform((canvasImageData) => {\n      for (let i = 0; i < canvasImageData.length; i += 4) {\n        const hsl = RGBtoHSL({\n          r: canvasImageData[i] / 255, \n          g: canvasImageData[i + 1] / 255, \n          b: canvasImageData[i + 2] / 255\n        });\n        const hslTransformed = fn(hsl);\n        const { r, g, b } = HSLtoRGB(hslTransformed);\n        canvasImageData[i] = r * 255;\n        canvasImageData[i + 1] = g * 255;\n        canvasImageData[i + 2] = b * 255;\n      }\n    });\n  }","\n/**\n * Loads an image from a URL and returns a promise that resolves to the image. Util\n * for working with canvas element images\n * @param src image URL ;\n * @returns Promise of Image Element\n */\nexport const imagePromise = (src: string) => {\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = \"Anonymous\";\n    img.onload = function () {\n      resolve(img);\n    };\n    img.onerror = function (e) {\n      reject(e);\n    };\n    img.src = src;\n  });\n}","import styled from \"styled-components\";\r\n\r\nexport const PhotoEditorWrapper = styled.div`\r\n  canvas {\r\n    border: solid 1px #ddd;\r\n  }\r\n`;\r\n\r\nexport default {};","import React, { useLayoutEffect, useRef } from 'react'\r\nimport { applyHslDataTransform, applyImageDataTransform } from '../../utils/canvas';\r\nimport { imagePromise } from '../../utils/imagePromise';\r\nimport { PhotoEditorWrapper as PhotoEditorWrapper } from './PhotoEditorStyles'\r\n\r\nconst commands = {\r\n  invert: applyImageDataTransform((myImageData) => {\r\n    for (let i = 0; i < myImageData.data.length; i += 4) {\r\n      myImageData.data[i] = 255 - myImageData.data[i];\r\n      myImageData.data[i + 1] = 255 - myImageData.data[i + 1];\r\n      myImageData.data[i + 2] = 255 - myImageData.data[i + 2];\r\n    }\r\n  }),\r\n  saturate: applyHslDataTransform(({ h, s, l }) => {\r\n    return { h, s: s * 1.1, l };\r\n  }),\r\n  desaturate: applyHslDataTransform(({ h, s, l }) => {\r\n    return { h, s: s * 0.9, l };\r\n  }),\r\n  lighten: applyHslDataTransform(({ h, s, l }) => {\r\n    return { h, s, l: l * 1.05 };\r\n  }),\r\n  darken: applyHslDataTransform(({ h, s, l }) => {\r\n    return { h, s, l: l * 0.95 };\r\n  }),\r\n}\r\n\r\nconst draw = async (canvas: HTMLCanvasElement, width: number, height: number) => {\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    return;\r\n  }\r\n  ctx.clearRect(0, 0, width, height);\r\n  const img = await imagePromise('https://picsum.photos/800/500');\r\n  ctx.drawImage(img, 0, 0, width, height);\r\n};\r\n\r\nconst PhotoEditor = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const width = 800;\r\n  const height = 600;\r\n\r\n  useLayoutEffect(() => {\r\n    if (canvasRef.current) {\r\n      draw(canvasRef.current, width, height)\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  const handleCommand = (command: string) => {\r\n    if (canvasRef.current) {\r\n      commands[command](canvasRef.current, width, height);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PhotoEditorWrapper>\r\n      <div role=\"toolbar\">\r\n        <button onClick={() => handleCommand('invert')}>Invert</button>\r\n        <button onClick={() => handleCommand('saturate')}>Saturate</button>\r\n        <button onClick={() => handleCommand('desaturate')}>Desaturate</button>\r\n        <button onClick={() => handleCommand('lighten')}>Lighten</button>\r\n        <button onClick={() => handleCommand('darken')}>Darken</button>\r\n      </div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={width}\r\n        height={height}\r\n      ></canvas>\r\n    </PhotoEditorWrapper>\r\n  )\r\n}\r\n\r\nexport default PhotoEditor\r\n"],"names":["HSLtoRGB","h","s","l","a","Math","min","f","n","k","max","r","g","b","RGBtoHSL","v","c","abs","applyImageDataTransform","fn","canvas","width","height","ctx","getContext","imageData","getImageData","data","putImageData","applyHslDataTransform","canvasImageData","i","length","hsl","hslTransformed","imagePromise","src","Promise","resolve","reject","img","Image","crossOrigin","onload","onerror","e","PhotoEditorWrapper","styled","commands","invert","myImageData","saturate","desaturate","lighten","darken","draw","clearRect","drawImage","canvasRef","useRef","useLayoutEffect","current","handleCommand","command","role","onClick","ref"],"sourceRoot":""}